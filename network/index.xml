<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>计算机网络 on Jekst</title><link>/network/</link><description>Recent content in 计算机网络 on Jekst</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2016-{year} Jekst. All Rights Reserved.</copyright><lastBuildDate>Sun, 05 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="/network/index.xml" rel="self" type="application/rss+xml"/><item><title>TCP协议总结</title><link>/network/tcp/</link><pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate><guid>/network/tcp/</guid><description>传输控制协议（Transmission Control Protocol，TCP）是一种面向连接的、可靠的、基于字节流的传输层通信协议，
1.TCP特点 TCP时面向连接的传输层协议。 TCP只支持一对一通信。 TCP提供可靠交付的服务。通过TCP传送的数据，无差错、不丢失、不重复、并且按序到达。 TCP提供全双工通信。 TCP是面向字节流的。 为满足TCP协议的这些特点，TCP协议做了如下的规定：
①数据分片：在发送端对用户数据进行分片，在接收端进行重组，由TCP确定分片的大小并控制分片和重组；
②到达确认：接收端接收到分片数据时，根据分片数据序号向发送端发送一个确认；
③超时重发：发送方在发送分片时启动超时定时器，如果在定时器超时之后没有收到相应的确认，重发分片；
④滑动窗口：TCP连接每一方的接收缓冲空间大小都固定，接收端只允许另一端发送接收端缓冲区所能接纳的数据，TCP在滑动窗口的基础上提供流量控制，防止较快主机致使较慢主机的缓冲区溢出；
⑤失序处理：作为IP数据报来传输的TCP分片到达时可能会失序，TCP将对收到的数据进行重新排序，将收到的数据以正确的顺序交给应用层；
⑥重复处理：作为IP数据报来传输的TCP分片会发生重复，TCP的接收端必须丢弃重复的数据；
⑦数据校验：TCP将保持它首部和数据的检验和，这是一个端到端的检验和，目的是检测数据在传输过程中的任何变化。如果收到分片的检验和有差错，TCP将丢弃这个分片，并不确认收到此报文段导致对端超时并重发。
2.TCP首部格式 0 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Source Port | Destination Port | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Sequence Number | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Acknowledgment Number | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Data | |U|A|P|R|S|F| | | Offset| Reserved |R|C|S|S|Y|I| Window | | | |G|K|H|T|N|N| | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Checksum | Urgent Pointer | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Options | Padding | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | data | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ Source Port是源端口，16位。 Destination Port是目的端口，16位。 Sequence Number是发送数据包中的第一个字节的序列号，32位。 Acknowledgment Number是确认序列号，32位。 Data Offset是数据偏移，4位，该字段的值是TCP首部（包括选项）长度除以4。 标志位： 6位，URG表示Urgent Pointer字段有意义： ACK表示Acknowledgment Number字段有意义 PSH表示Push功能，RST表示复位TCP连接 SYN表示SYN报文（在建立TCP连接的时候使用） FIN表示没有数据需要发送了（在关闭TCP连接的时候使用） Window表示接收缓冲区的空闲空间，16位，用来告诉TCP连接对端自己能够接收的最大数据长度。 Checksum是校验和，16位。 Urgent Pointers是紧急指针，16位，只有URG标志位被设置时该字段才有意义，表示紧急数据相对序列号（Sequence Number字段的值）的偏移。 3.</description></item><item><title>UDP协议总结</title><link>/network/udp/</link><pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate><guid>/network/udp/</guid><description>1.UDP概述 用户数据报协议（User Datagram Protocol，UDP），主要有以下特点：
UDP是无连接的，发送数据前不需要建立连接，结束后也不需要释放链接，因此减少了开销和发送数据之前的延迟 UDP使用尽最大努力交付，即不保证可靠交付，因此主机不需要维护复杂的连接状态参数。 UDP是面向报文的。 UDP没有拥塞控制。 UDP支持一对一、一对多、多对一、多对多对交互通信。 UDP的首部开销小，只有8个字节，比TCP的20个字节的首部要短。 2.UDP首部格式 0 7 8 15 16 23 24 31 +--------+--------+--------+--------+ | Source | Destination | | Port | Port | +--------+--------+--------+--------+ | | | | Length | Checksum | +--------+--------+--------+--------+ | | data octets ... +---------------- ... Source Port 源端口号，在需要对方回信时选用。不需要时可全为0，可选字段。 Destination Port 目的端口号。在终点交付报文时必须要使用到。 Length UDP用户数据报的长度，包括首部和数据长度，其最小值是8（仅有首部）。 Chechsum 校验和，检测UDP用户数据报在传输中是否有错。有错就丢弃。</description></item><item><title>HTTP响应码</title><link>/network/http-code/</link><pubDate>Sat, 04 Sep 2021 00:00:00 +0000</pubDate><guid>/network/http-code/</guid><description> Code Reason-Phrase 100 Continue 101 Switching Protocols 200 OK 201 Created 202 Accepted 203 Non-Authoritative Information 204 No Content 205 Reset Content 206 Partial Content 300 Multiple Choices 301 Moved Permanently 302 Found 303 See Other 304 Not Modified 305 Use Proxy 307 Temporary Redirect 400 Bad Request 401 Unauthorized 402 Payment Required 403 Forbidden 404 Not Found 405 Method Not Allowed 406 Not Acceptable 407 Proxy Authentication Required 408 Request Timeout 409 Conflict 410 Gone 411 Length Required 412 Precondition Failed 413 Payload Too Large 414 URI Too Long 415 Unsupported Media Type 416 Range Not Satisfiable 417 Expectation Failed 426 Upgrade Required 500 Internal Server Error 501 Not Implemented 502 Bad Gateway 503 Service Unavailable 504 Gateway Timeout 505 HTTP Version Not Supported</description></item></channel></rss>